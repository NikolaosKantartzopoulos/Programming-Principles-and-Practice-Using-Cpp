/*Standard library vector drill:
1. Define a global vector<int> gv; initialize it with ten ints, 1, 2, 4, 8, 16, etc.
2. Define a function f() taking a vector<int> argument.
3. In f():
a. Define a local vector<int> lv with the same number of elements as the argument vector.
b. Copy the values from gv into lv.
c. Print out the elements of lv.
d. Define a local vector<int> lv2; initialize it to be a copy of the argument vector.
e. Print out the elements of lv2.
4. In main():
a. Call f() with gv as its argument.
b. Define a vector<int> vv, and initialize it with the first ten factorial values (1, 2*1, 3*2*1, 4*3*2*1, etc.).
c. Call f() with vv as its argument.*/
#include "D:/Multimedia/My Projects/Visual Studio/std_lib_facilities.h"

vector <int> gv { 1,2,4,16,32,64,128,256,512,1024 };
void f(vector<int> v)
{
	vector<int> lv(v.size());
	lv = v;
	for (int i{}; i < lv.size(); i++) cout << lv[i] << " ";
	cout << endl;
	vector <int> lv2 = lv;
	for (int i{}; i < lv.size(); i++) cout << lv2[i] << " ";
	cout << endl;
}

int main()
{
	f(gv);
	vector<int>vv;
	for (int i{ 0 }; i < 10; i++)
	{
		if (i == 0) vv.push_back(1);
		else
		{
			int fct{ 1 };
			for (int j{ 1 }; j <= i ; j++)
			{
				fct *= j;
			}
			vv.push_back(fct);
		}
	}
	f(vv);
	keep_window_open();
}
