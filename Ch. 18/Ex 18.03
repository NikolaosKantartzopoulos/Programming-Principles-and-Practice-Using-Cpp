/*  Write a function, int strcmp(const char* s1, const char* s2), that compares 
	C-style strings. Let it return a negativenumber if s1 is lexicographically before 
	s2, zero if s1 equals s2, and a positive number if s1 is lexicographically after s2. 
	Do not use any standard library functions. Do not use subscripting; use the 
	dereference operator * instead.    */

#include "D:/Multimedia/My Projects/Visual Studio/std_lib_facilities.h"

int strcmp(char* str_1, char* str_2)
{
	int cnt_str_1{ 1 }, cnt_str_2 {1};	
	while (*str_1 != '\0') { str_1++; cnt_str_1++; } //get str_1 length
	str_1 -= cnt_str_1 - 1;	
	while (*str_2 != '\0') { str_2++; cnt_str_2++; }	//get str_2 length
	str_2 -= cnt_str_2 - 1;	

	int cnt_loop_1{1}, cnt_loop_2{1};
	for (int i{ 0 }; i < cnt_str_1; i++) 
	{
		if (*str_1 < *str_2) return 1;
		else if (*str_1 > *str_2) return 2;
		else
		{
			if (*str_1 == '\0' && *str_2 == '\0') return 0;
			str_1++; str_2++;
		}
	}
	return -1;
}

int main()
{
	char* greeting = new char [] {"Hello there."};
	char* answer = new char [] {"General Kenobi!"};
	cout << strcmp(greeting, answer);

	delete[] greeting;
	delete[] answer;

	cout << endl;
	keep_window_open();

}
